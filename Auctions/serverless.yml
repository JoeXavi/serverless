service: courseproject

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment: 
    ACCOUNTID: ${AWS::AccountId}
    ACTIONS_TABLE_NAME: ${self:custom.tableName}-${self:provider.stage}
    MAIL_QUEUE_ARN: ${self:custom.MailQueue.arn}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iam:
    role:
      statements:
        - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
        - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
        - ${file(iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}
functions:
  testFunction:
    handler: src/handlers/testFunction.handler
    events:
      - http:
          method: POST
          path: test1
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}
  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          authorizer: ${self:custom.authorizer}
  
  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events: 
    #  - schedule: rate(1 minute)

custom: 
  ACCOUNTID: ${AWS::AccountId, '484056151642'}
  authorizer: 'arn:aws:lambda:${self:provider.region}:484056151642:function:auth-service-${self:provider.stage}-auth'
  tableName: AuctionsTable
  MailQueue:
    arn: ${cf:notificationservice-${self:provider.stage}.MailQueueArn}
    url: ${cf:notificationservice-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-06092022-${self:provider.stage}
  # Opctional disable linting
  bundle:
    linting: false
